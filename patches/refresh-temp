Bottom: 086ca3722f3d976eace2df4dec717bea2f3aab52
Top:    2976fa73133e0a1bc27b2680b0772a8ac0bd13b2
Author: Alexey Lyashkov <shadow@Alexeys-MacBook-Pro.local>
Date:   2016-01-18 10:55:47 +0300

Refresh of sock-resource.patch

---

diff --git a/ib-sock.c b/ib-sock.c
index ea0a8e7..7367020 100644
--- a/ib-sock.c
+++ b/ib-sock.c
@@ -124,7 +124,7 @@ cm_server_handler(struct rdma_cm_id *cmid, struct rdma_cm_event *event)
 		}
 
 		sock = __ib_socket_create(cmid);
-		if (sock != NULL) {
+		if (sock == NULL) {
 			printk("error accept \n");
 			ret = -ENOMEM;
 			break;
@@ -156,6 +156,8 @@ cm_server_handler(struct rdma_cm_id *cmid, struct rdma_cm_event *event)
 		list_add(&sock->is_child, &parent->is_child);
 		spin_unlock(&parent->is_child_lock);
 
+		sock_event_set(parent, POLLIN);
+
 		break;
 	}
 	default:
@@ -274,6 +276,8 @@ void ib_socket_destroy(struct IB_SOCK *sock)
 {
 	printk("IB socket destroy %p\n", sock);
 
+	ib_sock_resource_free(sock);
+
 	if (sock->is_id)
 		rdma_destroy_id(sock->is_id);
 	kfree(sock);
@@ -387,5 +391,6 @@ struct IB_SOCK *ib_socket_accept(struct IB_SOCK *parent)
 		list_del_init(&sock->is_child);
 	}
 	spin_unlock(&parent->is_child_lock);
+	printk("Accept returned %p\n", sock);
 	return sock;
 }
diff --git a/srv.c b/srv.c
index e09d9d1..6f350e9 100644
--- a/srv.c
+++ b/srv.c
@@ -6,7 +6,7 @@ static int __init
 srv_init(void)
 {
 	struct IB_SOCK *sock, *sock_child = NULL;
-	unsigned long event;
+	unsigned long event = 0;
 	int ret;
 
 	sock = ib_socket_create();
@@ -19,7 +19,8 @@ srv_init(void)
 
 	/* wait incomming connect */
 	while ((event & POLLIN) == 0) {
-	event = ib_socket_poll(sock);
+		event = ib_socket_poll(sock);
+		printk("srv got event %lx\n", event);
 		/* wait a POLLIN to say new connection ready to */
 		if ((event & POLLERR) != 0)
 			goto out;
