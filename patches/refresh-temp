Bottom: 6211092ebf504eb3de35d1aa2382279109f06fd4
Top:    52f54a9066c43779ebf2ff7fe6e106660e78d754
Author: Alexey Lyashkov <shadow@Alexeys-MacBook-Pro.local>
Date:   2016-01-18 11:00:20 +0300

Refresh of srv.patch

---

diff --git a/ib-sock.c b/ib-sock.c
index c79a279..5abf9a5 100644
--- a/ib-sock.c
+++ b/ib-sock.c
@@ -122,6 +122,8 @@ cm_server_handler(struct rdma_cm_id *cmid, struct rdma_cm_event *event)
 		list_add(&sock->is_child, &parent->is_child);
 		spin_unlock(&parent->is_child_lock);
 
+		sock_event_set(parent, POLLIN);
+
 		break;
 	}
 	default:
@@ -353,5 +355,6 @@ struct IB_SOCK *ib_socket_accept(struct IB_SOCK *parent)
 		list_del_init(&sock->is_child);
 	}
 	spin_unlock(&parent->is_child_lock);
+	printk("Accept returned %p\n", sock);
 	return sock;
 }
diff --git a/srv.c b/srv.c
index e09d9d1..6f350e9 100644
--- a/srv.c
+++ b/srv.c
@@ -6,7 +6,7 @@ static int __init
 srv_init(void)
 {
 	struct IB_SOCK *sock, *sock_child = NULL;
-	unsigned long event;
+	unsigned long event = 0;
 	int ret;
 
 	sock = ib_socket_create();
@@ -19,7 +19,8 @@ srv_init(void)
 
 	/* wait incomming connect */
 	while ((event & POLLIN) == 0) {
-	event = ib_socket_poll(sock);
+		event = ib_socket_poll(sock);
+		printk("srv got event %lx\n", event);
 		/* wait a POLLIN to say new connection ready to */
 		if ((event & POLLERR) != 0)
 			goto out;
