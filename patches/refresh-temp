Bottom: 0087f939e1c2ac2e45336b5b30e6a84ccf09e136
Top:    877b66c38720851d2ae0ad01da7d2dbd23456139
Author: Alexey Lyashkov <shadow@Alexeys-MacBook-Pro.local>
Date:   2016-01-23 09:28:10 +0300

Refresh of ctl-verbs.patch

---

diff --git a/ib-sock.c b/ib-sock.c
index 93d0cbd..c87ac81 100644
--- a/ib-sock.c
+++ b/ib-sock.c
@@ -13,34 +13,47 @@ static void ib_cq_event_callback(struct ib_event *cause, void *context)
 	printk("got cq event %d \n", cause->event);
 }
 
-static void ib_sock_handle_rx(struct IB_SOCK *sock, struct ib_sock_ctl *msg)
+static void ib_sock_handle_rx(struct IB_SOCK *sock, struct ib_wc *wc)
 {
+	struct ib_sock_ctl *msg = (struct ib_sock_ctl *)(uintptr_t)wc->wr_id;
 	struct ib_device *device = sock->is_id->device;
 	int ret;
 
+	/* CPU is owner*/
 	ib_dma_sync_single_for_cpu(device, 
 				   msg->iscm_sge.addr, msg->iscm_sge.length,
 				   DMA_FROM_DEVICE);
 
+	if (wc->status != IB_WC_SUCCESS) {
+		printk("rx status error %d\n", wc->status);
+		goto repost;
+	}
+
+
 	if (msg->iscm_msg.sww_magic == IB_CTL_MSG_MAGIC)
 		printk("recv maic ok!\n");
 	else
 		printk("recv magic bad %x\n", msg->iscm_msg.sww_magic);
 
-
-	/* repost to processing */
+repost:
+	/* trasnfer ownership to the device */
 	ib_dma_sync_single_for_device(device, 
 				   msg->iscm_sge.addr, msg->iscm_sge.length,
 				   DMA_FROM_DEVICE);
-
+	/* repost to processing */
 	ret  = ib_sock_ctl_post(sock, msg);
 	if (ret != 0)
 		printk("Error with summit to rx queue\n");
 }
 
-static void ib_sock_handle_tx(struct IB_SOCK *sock, struct ib_sock_ctl *msg)
+static void ib_sock_handle_tx(struct IB_SOCK *sock, struct ib_wc *wc)
 {
+	int event = POLLOUT;
 	/* TX event hit when TX done or error hit */
+
+	if (wc->status != IB_WC_SUCCESS)
+		event |= POLLERR;
+	sock_event_set(sock, event);
 }
 
 /* based on ip over ib code  */
@@ -55,12 +68,11 @@ static void ib_sock_cq_work(struct work_struct *work)
 poll_more:
 	n = ib_poll_cq(sock->is_cq, IB_CQ_EVENTS_BATCH, sock->is_cq_wc);
 	for (i = 0; i < n; i++) {
-		msg = (struct ib_sock_ctl *)sock->is_cq_wc[i].wr_id;
-
+		msg = (struct ib_sock_ctl *)(uintptr_t)sock->is_cq_wc[i].wr_id;
 		if (msg->iscm_flags & CTL_MSG_RX)
-			ib_sock_handle_rx(sock, msg);
+			ib_sock_handle_rx(sock, &sock->is_cq_wc[i]);
 		else
-			ib_sock_handle_tx(sock, msg);
+			ib_sock_handle_tx(sock, &sock->is_cq_wc[i]);
 
 	}
